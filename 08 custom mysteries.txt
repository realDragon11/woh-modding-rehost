[mystery]
name=""
author=""
art=""
description=""
[intro]
art=""
text_one=""
text_two=""
text_thr=""
[progress]
location=""
background=""
one_loc=""
one_txt=""
one_frc=""
two_loc=""
two_txt=""
two_frc=""
thr_loc=""
thr_txt=""
thr_frc=""
fou_loc=""
fou_txt=""
fou_frc=""
fiv_loc=""
fiv_txt=""
fiv_frc=""
six_loc=""
six_txt=""
six_frc=""
sev_loc=""
sev_txt=""
sev_frc=""
eig_loc=""
eig_txt=""
eig_frc=""
nin_loc=1
nin_txt=""
nin_frc=""
ten_loc=1
ten_txt=""
ten_frc=""
[ending_a]
end_title=""
end_img="
end_txta=""
end_txtb=""
end_txtc=""
end_txtd=""
[ending_b]
end_title=""
end_img=""
end_txta=""
end_txtb=""
end_txtc=""
end_txtd=""
[big_ending]
end_txt=""
[ending_c]
end_title=""
end_img=""
end_txta=""
end_txtb=""
end_txtc=""
end_txtd=""

FUNNY ALL CAPS TITLE HERE

The above is the complete list of all instructions a custom mystery .ito file can have (as of 0.9.9d), and which World of Horror's executable will read for your custom event to take effect.

Almost all of them must be followed by ="", and all text, effects and number values must be typed inside the "quotation marks".

The only exception is if you want to make the Mystery shorter than 10 Investigations, more about it below.

Below are the explanations of above instruction sets. Please note that unlike other files, Mystery file has several separate sections, each with similar code strings.

[mystery]: placed at the very beginning of the .ito file, it lets the game know that everything below it is a mystery's code.
name: name of the mystery as it will be visible on the Mystery Board and Custom Mysteries Tab in-game.
author: name of the mystery's author; it will show under the Mystery's name in Custom Mysteries Tab in-game (but not on Mystery Board).
art: icon that will be shown besides Mystery's name in Custom Mysteries Tab in-game (but not on Mystery Board). The icon is a .png with size of 31x31px. The file path is taken from the level of the mystery.ito, so consider putting it in a subfolder, for example 'mymystery/mymysteryicon.png'
description: a short text description of the Mystery, it will be shown for the player when you move the cursor over the Mystery's title in Custom Mystery Tab in-game.

[intro]: the game will use the code below this bracket for Mystery Intro.
art: image that will be shown during Mystery's intro. The intro image is a .png with size of 218x207px. The game will use a rectangular 'window' to place the image in, rounding the corners a few pixels deep. The file path is taken from the level of the mystery.ito, so consider putting it in a subfolder, for example 'mymystery/myintro.png'
text_one: short 'lore' description about the mystery's central topic.
[OPTIONAL] text_two: same as above. If you include this line, the first description will provide a > button for the player to reach this text. If you don't, the game's intro will end with just one panel, and > button will not be drawn.
[OPTIONAL] text_thr: same as above. 

[progress]: the game will use the code below this bracket for Mystery's investigations.
location: this string will be used on the 'ending location' button at the very end of mystery. The game will render it as 'INVESTIGATE#location' (# is in-game line break automatically applied by game), for example location="MY HOUSE" will show as 'INVESTIGATE#MY HOUSE'.
background: image specified here will be used as the background. The background image is a .png with size of 512x148px. The file path is taken from the level of the mystery.ito, so consider putting it in a subfolder, for example 'mymystery/mybackground.png'
one_loc (two_loc, three_loc and so forth): the in-game Location that needs to be investigated by the Player to progress the mystery. Available strings are:
*downtown: player needs to investigate DOWNTOWN
*apartment: player needs to investigate APARTMENTS (yes, the string is in singular, the location's name is in plural)
*school: player needs to investigate SCHOOL
*hospital: player needs to investigate HOSPITAL
*seaside: player needs to investigate SEASIDE
*forest: player needs to investigate FOREST
*mansion: player needs to investigate MANSION
*village: player needs to investigate VILLAGE
*ending: this will cause the game to draw Ending Button that uses the text in 'location' string. If you do not include this, the mystery cannot end.
*1: not sure what it does right now.
one_txt (two_txt, three_txt etc etc): the text displayed above Locations panel, under the Doom meter. It will be shown preceding the investigation of the location defined by one_loc. Game auto-wraps overflowing text; you can also use # to create line breaks
one_frc (two_frc, three_frc...): event defined here will be forced to show in-game, overriding any random event or enemy encounter. The file path starts FROM THE LEVEL OF GAME ITSELF, so if you put it in your own subfolder, the path should read: 'mystery/mymystery/myforcedevent.ito'. You cannot force events from the base game, or custom events from 'custom' folder. You can use this to give the player an event that changes the mystery's ending, for example, via 'ending_trigger' reward. Check file '02 ito file instructions and explanations' for extra info.
*Currently (0.9.9d), the Mystery must end on the 8th Investigation.
**How to implement a 'boss fight' with the current system: On 7th investigation, force an event that will trigger an enemy encounter, and set that encounter as unescapable (can_run="0")

[ending_a] ([ending_b] and [ending_c] use the same set of strings, but will process them separately when the player reaches them): the game will use the code below this bracket to show Ending A.
end_title: will show up at the top-right of the ending screen. in base game, these are rendered in ALL CAPS, for example 'OPHTHALMOLOGY (I)'.
end_img: image specified here will be used as the image for left-half of the ending screen. The ending image is a .png with size of 227x277px. The file path is taken from the level of the mystery.ito, so consider putting it in a subfolder, for example 'mymystery/myending.png'
end_txta: will provide some text below the end title for the player.
end_txtb: same as above, and the game will draw a > button for the player to reach this text.
end_txtc: same as above.
end_txtd: same as above.
*Currently (0.9.9d), all four ending texts are required; otherwise the game will draw empty panels.

[big_ending]: the game will use the code below this bracket for Mystery's Ending Summary (where you get experience, curse effects, etc).
end_txt: this text will be shown above mystery's summary.